v1.3.0
2017.9.25

1.命名
	-禁止下划线或者美元作为开始或结束!
	-只能使用英文
	-类名UpperCamelCase风格
		--DO/BO/DTO/VO/AO除外[TASK01:查看相关概念!]
	-方法名,参数名,成员变量,局部变量lowerCamelCase风格
	-常量名全部大写,下划线隔开,不要嫌名字长,意思一定要清楚
	-抽象类以Abstract或者Base开头
	-异常类以Exception结尾
	-测试类由要测试的类名+Test组成
	-中括号是数组类型的一部分,String[] args
	-POJO中布尔类型的变量,都不要加is,否则部分框架解析会引起序列化错误
	-包名必须小写,单数
	-类名可以复数
	-不要瞎缩写
	-代码自解释的目标,尽量完整单词组合
	-若模块/接口/类/方法使用了设计模式,要在命名中体现出来
	-接口类中的方法和属性不要添加任何修饰符号,并且要加上有效的Javadoc注释,尽量不要在接口中定义变量,如果一定要定义,肯定是与接口方法相关,并且是整个应用的基础常量(在Java的接口中，只有常量和抽象方法。所有的数据域均用 public static final 修饰，所有的方法都用 public abstract 修饰,在JDK1.8中可以定义默认方法和静态方法了)
	-对于Service和Dao类,基于SOA的理念,暴露出来的一定是接口,内部的实现类用Impl的后缀与接口区别
	-如果是形容能力的接口名称,取对应的形容词做接口名(通常是-able的形式)
	-枚举类名以Enum,成员名称全部大写,单词间用下划线隔开(枚举类是特殊的常量类,构造方法被默认强制私有)
	-Service/Dao层方法命名
		--获取单个对象get开头
		--获取多个对象list开头
		--获取统计值count开头
		--插入save/insert开头
		--删除remove/delete开头
		--修改用update开头
	-领域模型(domain model)(业务对象模型)命名
		--数据对象:xxxDO,xxx为数据表名
		--数据传输对象:xxxDTO,xxx为业务领域相关的名称
		--展示对象:xxxVO,xxx一般为网页名
		--POJO是DO/DTO/BO/VO的统称,禁止xxxPOJO
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	